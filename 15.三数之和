三数之和
难点：去除重复解
方法：排序+双指针
代码：
def threeSum(self, nums: List[int]) -> List[List[int]]:
        res = []
        if len(nums) < 3 or not nums:
            return res
        n = len(nums)
        nums.sort()
        for i in range(n-2):
            if nums[i] > 0:
                return res
            if i > 0 and nums[i-1] == nums[i]:  # 相邻元素重复
                continue
            l = i + 1
            r = n - 1
            while(l < r):
                sum = nums[i] + nums[l] + nums[r]
                if sum == 0:
                    res.append([nums[i],nums[l],nums[r]])
                    while(l < r and nums[l] == nums[l+1]):
                        l += 1
                    while(l < r and nums[r] == nums[r-1]):
                        r -= 1
                    l += 1
                    r -= 1
                elif sum < 0:
                    l += 1
                else:
                    r -= 1
        return res        
